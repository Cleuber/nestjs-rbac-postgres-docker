version: "3.8"
services:
  api:
    build:
      dockerfile: Dockerfile
      context: .
      # Only will build development stage from our dockerfile
      target: development
    volumes:
      - .:/nodejs/src/app
      # - ./nodejs/src/app/node_modules
    # Run in Debug Mode: npm run start:debug --> Don't forget to start your vscode debugger!
    # Run in dev Mode: npm run start:dev
    command: sh -c "npm install && npm run start:debug"
    # command: npm run start:debug
    depends_on: 
      - postgres
    environment: 
      DATABASE_URL: postgres://user:password@postgres:5432/db
      NODE_ENV: development
      JWT_SECRET: 1hard_to_guess_secret7890a
      PORT: 3000
      TYPEORM_CONNECTION: postgres
      TYPEORM_HOST: 172.17.0.1
      TYPEORM_USERNAME: user
      TYPEORM_PASSWORD: password
      TYPEORM_DATABASE: db
      TYPEORM_PORT: 35000
      TYPEORM_ENTITIES: dist/**/*.entity.js
      TYPEORM_MIGRATIONS: dist/migrations/**/*.js
      TYPEORM_ENTITIES_DIR: src
      TYPEORM_MIGRATIONS_DIR: src/migrations
    ports:
      - 8080:3000
      # debugging port
      - 9229:9229

  postgres:
    image: postgres:alpine
    environment: 
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    ports:
      - 35000:5432

    ### Postgres Adminer ###
  postgres_admin:
    image: dpage/pgadmin4:4.28
    depends_on:
      - postgres
    environment: 
      PGADMIN_DEFAULT_EMAIL: admin@admin.de
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - 5050:80
